---
- name: Check for existing dashboards
  uri:
    url: "{{ beats_client_kibana_url }}/_search?q=title:{{ beats_client_kibana_dash_search[item] }}"
    return_content: yes
    body_format: json
    body: {}
  register: dashboard_check_result
  changed_when: false
  ignore_errors: yes
  with_items: "{{ beats_client_beats_packages }}"

- name: Lets check for presence of dashboard command
  stat:
    path: "/usr/share/{{ item }}/scripts/import_dashboards"
    get_checksum: no
  register: legacy_dashboard_exists
  with_items: "{{ beats_client_beats_packages }}"

- name: Inject dashboards into kibana index
  command: >-
    /usr/share/{{ item }}/scripts/import_dashboards
    -i {{ beats_client_kibana_indices[item] }}
    {{ beats_client_kibana_export_parameters }}
  when:
    - dashboard_check_result.results[0].json.hits.total == 0
    # Check if legacy dashboard command actually exists before running
    - (legacy_dashboard_exists.results|selectattr('item','equalto',item))[0].stat.exists
  with_items: "{{ beats_client_beats_packages }}"
